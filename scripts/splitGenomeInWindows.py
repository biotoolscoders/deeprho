import os
import sys
import numpy as np
import argparse
from tqdm import tqdm
parser = argparse.ArgumentParser(description='splitting large genome into windows.')
parser.add_argument('-f', '--file', help='input name, Rentplus input like.')
parser.add_argument('-n', '--npyfile', help='npy file generated by msReader.py.')
parser.add_argument('-w', '--windowsize', help='size of each window.', type=int)
parser.add_argument('-p', '--popsize', help='population size.', type=int)
parser.add_argument('-sl', '--skiplength', help='length of overlapping.', type=int, default=-1)
args = parser.parse_args()
msName = args.file
msVal = args.npyfile
windowSize = args.windowsize
popSize = args.popsize
skipLength = args.skiplength
dirName = os.path.dirname(msVal)

if skipLength == -1:
    skipLength = windowSize

with open(msName, 'r') as f:
    lines = f.readlines()
    pos = [int(val) for val in lines[0].strip().split()]
    msdata = [list(z.strip()) for z in lines[1:]]
genomeLength = len(msdata[0])

def output2file(file, pos, data, start):
    p = pos[start: start + windowSize]
    p = [str(v) for v in p]
    p = np.array([float(v) for v in p])
    p = (p - p.min()) / (p.max()-p.min()) * 10000 + 1
    p = p.tolist()
    p = [str(int(val)) for val in p]
    file.write(' '.join(p))
    file.write('\n')
    for d in data:
        file.write(''.join(d[start:start + windowSize]))
        file.write('\n')
    file.flush()
    file.close()

msv = np.load(msVal)
newms = []
numBins = (genomeLength - windowSize) // skipLength + 1

try:
    os.mkdir('{dirname}/_windows'.format(dirname=dirName))
except FileExistsError:
    raise Exception('{dir}/_windows has already existed.'.format(dir=dirName))

for i in tqdm(range(numBins),ascii=True, ncols=50):
    file = open('{dir}/_windows/{ind}.txt'.format(dir=dirName, ind =i), 'w')
    output2file(file, pos, msdata, i*skipLength)
    newms.append(msv[..., i*skipLength:i*skipLength+windowSize].reshape([popSize, windowSize]))

newms = np.array(newms)
np.save('{dirname}/windows.npy'.format(dirname=dirName), newms)


